name: Rocm-ub-22-6.0

on:
  workflow_dispatch:
    inputs:
      ROCM_REPO:
        description: 'rocm repo'
        required: true
        default: "6.0"
      ROCM_VERSION:
        description: 'rocm-ver'
        required: true
        default: "6.0.0"
      ROCM_LIB_VERSION:
        description: 'rocm-lib-ver'
        required: true
        default: "60000"
      ROCM_PATH:
        description: 'rocm-path'
        required: true
        default: "/opt/rocm-6.0.0"
      IMAGE_TAG:
        description: 'docker tag'
        required: false # Allow the user to provide a tag or use the default
        
jobs:
  build:
    runs-on: self-hosted

    env:
      ROCM_REPO: "6.0"
      ROCM_VERSION: "6.0.0"
      ROCM_LIB_VERSION: "60000"
      ROCM_PATH: /opt/rocm-6.0.0
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker
      run: |
          # Check if Docker is installed
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt-get update
            sudo apt-get install -y docker-ce
          else
            echo "Docker is already installed."
          fi
      
    - name: Login to dockerhub
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    - name: Create unique tag and build Docker image
      id: build
      env:
        IMAGE_TAG_INPUT: ${{ github.event.inputs.image_tag }}
      run: |
          # Generate a unique tag if none is provided
          if [ -z "$IMAGE_TAG_INPUT" ]; then
            unique_tag="rocm-ub-22-$(date +%Y%m%d%H%M%S)"
          else
            unique_tag="$IMAGE_TAG_INPUT"
          fi

          # Ensure the tag is valid
          if [[ ! "$unique_tag" =~ ^[a-zA-Z0-9_/-]+$ ]]; then
            echo "Invalid tag format: $unique_tag"
            exit 1
          fi

          echo "IMAGE_TAG=${unique_tag}" >> $GITHUB_ENV
          
          # Build Docker image with the unique tag
          docker build \
            --build-arg ROCM_REPO=${{ env.ROCM_REPO }} \
            --build-arg ROCM_VERSION=${{ env.ROCM_VERSION }} \
            --build-arg ROCM_LIB_VERSION=${{ env.ROCM_LIB_VERSION }} \
            --build-arg ROCM_PATH=${{ env.ROCM_PATH }} \
            -t nlingamp/pt-github:${unique_tag} \
            .

    - name: Push Docker image to Docker Hub
      run: |
          docker push nlingamp/pt-github:${{ env.IMAGE_TAG }}
