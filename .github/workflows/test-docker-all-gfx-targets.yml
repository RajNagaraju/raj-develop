# this workflow test rocm docker on gpu self hosted runners MI100, mi210, Mi300a, Mi330x, Navi31
name: test-rocm-stable-docker-gfx-targets

# This controls when the workflow is run. Set on to workflow_
on:
  # This allows workflow to be run manually from Actions tab
  workflow_dispatch:
    # When invoked, the user is prompted to enter the following inputs
    inputs:
      DOCKER_CONTAINER:
        description: "Docker container name"
        required: true
        default: "amddcgpuce/rocm"
        type: string
      DOCKER_DIGEST_OR_TAG:
        description: 'Enter the docker digest or tag below'
        required: true
        default: "6.2.1-ub22"
        type: string
      SELF_HOSTED_RUNNER:
        description: ' runner label '
        required: true
        type: choice
        options:
        - aiswhud-mi100-gfx908
        - aiswhud-mi250-gfx90a
        - aiswhud-mi250-docker
        - aiswhud-mi300a-gfx941
        - aiswhud-mi300x-gfx942
        - aiswhud-navi3-gfx1030

# The jobs section defines jobs to run. Each job has completion status
jobs:
  #Define a checkout job
  checkout:
    # Specify the runner that the job will run on
    runs-on: [self-hosted, "${{ inputs.SELF_HOSTED_RUNNER }}"]

    # Define the set of steps or tasks executed by the job
    steps:
      # Check out repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v4

  #Define a Cpu-mem job
  cpu-mem:
    # Specify the runner that the job will run on
    runs-on: [self-hosted, "${{ inputs.SELF_HOSTED_RUNNER }}"]
  
    # Define the set of steps or tasks executed by the job
    steps:
      - name: Cpu information
        run: |
          echo "CPU information"
          lscpu
        
      - name: Memory Information
        run: |
          echo "Memory information"
          lsmem

  # Define a rocm-smi job
  rocm-smi:
    runs-on: [self-hosted, "${{ inputs.SELF_HOSTED_RUNNER }}"]

    steps:
      # Run a single command, rocm-smi, using runners shell
      - name: Run a single command, rocm-smi, invoking docker container
        run: docker run --rm --privileged --network=host --ipc=host ${{ github.event.inputs.DOCKER_CONTAINER }}:${{ github.event.inputs.DOCKER_DIGEST_OR_TAG }} rocm-smi

  # Define a rocminfo job
  rocminfo:
    needs: rocm-smi
    runs-on: [self-hosted, "${{ inputs.SELF_HOSTED_RUNNER }}"]

    steps:
      # Run a set of commands using runners shell, use '|'
      - name: Echo the command and run rocminfo, invoking the docker container
        run: |
          echo Run rocminfo
          echo docker run --rm --privileged --network=host --ipc=host ${{ github.event.inputs.DOCKER_CONTAINER }}:${{ github.event.inputs.DOCKER_DIGEST_OR_TAG }} rocminfo
          docker run --rm --privileged --network=host --ipc=host ${{ github.event.inputs.DOCKER_CONTAINER }}:${{ github.event.inputs.DOCKER_DIGEST_OR_TAG }} rocminfo

  # Define a rvs job
  rvs:
    needs: rocminfo
    runs-on: [self-hosted, "${{ inputs.SELF_HOSTED_RUNNER }}"]
    if: ${{ always() }}

    steps:
      # Run a set of commands using runners shell, use '|'
      - name: Echo the command and run, invoking the docker container
        run: |
          echo Run rvs
          echo docker run --rm --privileged --network=host --ipc=host ${{ github.event.inputs.DOCKER_CONTAINER }}:${{ github.event.inputs.DOCKER_DIGEST_OR_TAG }} rvs
          docker run --rm --privileged --network=host --ipc=host ${{ github.event.inputs.DOCKER_CONTAINER }}:${{ github.event.inputs.DOCKER_DIGEST_OR_TAG }} rvs

  # Define a rocm_techsupport job
  rocm_techsupport:
    needs: rvs
    runs-on: [self-hosted, "${{ inputs.SELF_HOSTED_RUNNER }}"]

    steps:
      # Run a set of commands using runners shell, use '|'
      - name: Download rocm_techsupport.sh
        run: |
          # download rocm_techsupport.sh using wget
          wget -O rocm_techsupport.sh --no-check-certificate --no-cookies --no-check-certificate  https://raw.githubusercontent.com/amddcgpuce/rocmtechsupport/master/rocm_techsupport.sh

      - name: Run the script
        run: |
          #run the script
          sh ./rocm_techsupport.sh
