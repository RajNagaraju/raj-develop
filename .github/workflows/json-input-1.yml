name: Process JSON Input DATA

on:
  workflow_dispatch:
    inputs:
      JSON_INPUT:
        description: "Enter all JSON data as a single JSON string"
        required: true
        default: |
          { "submit_date" : "Jul 24, 2024",
            "component" : "Pytorch",
            "version" : "latest",
            "repo" : "https://github.com/pytorch",
            "commithash" : "4eee2e7a6dfbd9caab6a1e59088744ae91f2aa25",
            "aisw_test_target_goal" : "359944",
            "rocm_cuda_score" : "98.44",
            "gfxarch" : "MI250",
            "rocm_version" : "6.1",
            "rocm_actual_testcount" : "358763",
            "rocm_score" : "99.67",
            "nvarch" : "A10G",
            "cuda_version" : "12.1",
            "cuda_actual_testcount" : "359149",
            "cuda_score" : "99.77"
          }
      VERSION_DETAILS:
        description: "Enter json format string mkl, python"
        required: true
        default: '{"mkl" : "2024.1", "python" : "3.8"}'
      ROCM_CUDA_SCORE_DETAILS:
        description: "Enter the ROCm-CUDA score details"
        required: true
        default: '{"comment" : "Additional explanations:  string"}'
      ROCM_SCORE_DETAILS:
        description: "Enter the ROCm score details"
        required: true
        default: '{"comment" : "Additional explanations:  string"}'
      CUDA_SCORE_DETAILS:
        description: "Enter the CUDA score details"
        required: true
        default: '{"comment" : "Additional explanations:  string"}'

jobs:
  process-json:
    runs-on: ubuntu-latest

    env:
      SCHEMA_VERSION: "V4"

    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Parse JSON input
        run: |
          # Read JSON input from the workflow input
          JSON_STRING='${{ github.event.inputs.JSON_INPUT }}'
          
          # Use jq to parse JSON and extract values
          submit_date=$(echo "$JSON_STRING" | jq -r '.submit_date')
          component=$(echo "$JSON_STRING" | jq -r '.component')
          version=$(echo "$JSON_STRING" | jq -r '.version')
          repo=$(echo "$JSON_STRING" | jq -r '.repo')
          commithash=$(echo "$JSON_STRING" | jq -r '.commithash')
          aisw_test_target_goal=$(echo "$JSON_STRING" | jq -r '.aisw_test_target_goal')
          rocm_cuda_score=$(echo "$JSON_STRING" | jq -r '.rocm_cuda_score')
          gfxarch=$(echo "$JSON_STRING" | jq -r '.gfxarch')
          rocm_version=$(echo "$JSON_STRING" | jq -r '.rocm_version')
          rocm_actual_testcount=$(echo "$JSON_STRING" | jq -r '.rocm_actual_testcount')
          rocm_score=$(echo "$JSON_STRING" | jq -r '.rocm_score')
          nvarch=$(echo "$JSON_STRING" | jq -r '.nvarch')
          cuda_version=$(echo "$JSON_STRING" | jq -r '.cuda_version')
          cuda_actual_testcount=$(echo "$JSON_STRING" | jq -r '.cuda_actual_testcount')
          cuda_score=$(echo "$JSON_STRING" | jq -r '.cuda_score')

          # JSON INPUT Values
          schema_version="${{ env.SCHEMA_VERSION }}"
          version_details='${{ github.event.inputs.VERSION_DETAILS }}'
          rocm_cuda_score_details='${{ github.event.inputs.ROCM_CUDA_SCORE_DETAILS }}'
          rocm_score_details='${{ github.event.inputs.ROCM_SCORE_DETAILS }}'
          cuda_score_details='${{ github.event.inputs.CUDA_SCORE_DETAILS }}'

          # Print extracted values to logs
          echo "Schema_Version: $schema_version"
          echo "Submit Date: $submit_date"
          echo "Component: $component"
          echo "Version: $version"
          echo "Repo: $repo"
          echo "Commit Hash: $commithash"
          echo "AISW Test Target Goal: $aisw_test_target_goal"
          echo "ROCm CUDA Score: $rocm_cuda_score"
          echo "GFXARCH: $gfxarch"
          echo "ROCm Version: $rocm_version"
          echo "ROCm Actual Test Count: $rocm_actual_testcount"
          echo "ROCm Score: $rocm_score"
          echo "NVARCH: $nvarch"
          echo "CUDA Version: $cuda_version"
          echo "CUDA Actual Test Count: $cuda_actual_testcount"
          echo "CUDA Score: $cuda_score"
          echo "Version_details: $version_details"
          echo "Rocm_cuda_score_details: $rocm_cuda_score_details"
          echo "Rocm_score_details: $rocm_score_details"
          echo "Cuda_score_details: $cuda_score_details"
