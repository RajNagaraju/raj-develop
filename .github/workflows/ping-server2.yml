name: ping servers new
#run-name: ${{ github.actor }}
on: 
  workflow_dispatch:
    inputs:
      inventory_path:
        description: 'Path to the inventory file or folder'
        required: true
        default: 'inventory/mi300x'
jobs:
  Ping-servers:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: |
             sudo apt install -y software-properties-common sshpass python3-pip
             python3 -m pip install virtualenv
             pip3 install -r requirements.txt
      - run: |
         chmod +x venv_setup.sh
         sudo ./venv_setup.sh
      - run: source venv/bin/activate
      - run: ls -lart 
      
      - name: Ping servers
        id: ping_servers
        run: |
          # Run the Ansible ping module and capture the output
          ansible all -i ${{ github.event.inputs.inventory_path }} -m ping -e"ansible_user=nlingamp" -o | tee ping_results.txt

          echo "cat ping-results"
          cat ping_results.txt
          
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          
      - name: Process Ping Results
        run: |
          # Check for successful pings and failed pings
          grep 'SUCCESS' ping_results.txt | awk '{print $1, "Online"}' > final_results.txt 
          echo "final results"
          cat final_results.txt
          
          grep 'Failed' ping_results.txt | awk '{print $1, "Offline"}' >> final_results-failed.txt
          echo "final results for failed pings"
          cat final_results-failed.txt  
          
      - name: Filter Non-Responding Servers
        run: |
          grep 'Failed' final_results-failed.txt > failed_servers.txt
          if [ -s failed_servers.txt ]; then
              echo "Sending email with the list of non-responding servers."
              cat failed_servers.txt
          else
              echo "All servers responded successfully."
              cat final_results.txt
          fi

      - name: cleanup repo
        run: sudo rm -rf /home/raju/actions-runner/_work/raj-develop/raj-develop/
  
           
