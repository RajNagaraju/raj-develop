name: ping servers new
#run-name: ${{ github.actor }}
on: 
  workflow_dispatch:
    inputs:
      inventory_path:
        description: 'Path to the inventory file or folder'
        required: true
        default: 'inventory/mi300x'
jobs:
  Ping-servers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
             sudo apt install -y software-properties-common sshpass python3-pip
             python3 -m pip install virtualenv
             pip3 install -r requirements.txt
      - run: |
         chmod +x venv_setup.sh
         ./venv_setup.sh
      - run: source venv/bin/activate
      - run: ls -lart 
      
      - name: Ping servers
        id: ping_servers
        run: |
          # Run the Ansible ping module and capture the output
          ansible all -i ${{ github.event.inputs.inventory_path }} -m ping -o > ping_results.txt || echo "Ping failed" >> ping_results.txt
          cat ping_results.txt

        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Filter Non-Responding Servers
        run: |
          grep 'FAILED!' ping_results.txt > failed_servers.txt
          if [ -s failed_servers.txt ]; then
            echo "Sending email with the list of non-responding servers."
          else
          echo "All servers responded successfully."
          fi
  
           
