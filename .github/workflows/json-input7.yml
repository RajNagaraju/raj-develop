# this job is taking string inputs from user and printing
name: JSON INPUT 7 yaml

# This controls when the workflow is run. Set on to workflow
on:
  # This allows workflow to be run manually from Actions tab
  workflow_dispatch:
    # Retrieving inputs from the user
    inputs:
      SUBMIT_DATE_SYSTEM_SPEC:
        description: "Enter the submit date (YYYY-MM-DD)/systemspec(SMC4124)"
        required: true
        default: '2024-08-19/SMC4124'
        type: string
      COMPONENT_VERSION:
        description: 'Enter the component/version'
        required: true
        default: 'pytorch/latest'
        type: string 
      REPO_COMMITHASH:
        description: 'Enter repo URL with commithash'
        required: true
        default: 'https://github.com/ROCm/component_repo/commit/4eee2e7a6dfbd9caab6a1e59088744ae91f2aa25'
        type: string
      GFX_ROCM:
        description: 'Enter gfxarch/rocm_version/'
        required: true
        default: 'MI250/6.1'
        type: string
      NV_CUDA:
        description: "Enter nvarch/cuda_version"
        required: true
        default: 'A10G/12.1'
        type: string
      ROCM_UT_FAIL_PASS_SKIP_DESELECT_WARN_ERR:
        description: "Enter rocm_ut_failed/passed/skipped/deselected/warning/errors"
        required: true
        default: '100/358763/358763/358763/358763/358763'
        type: string
      CUDA_UT_FAIL_PASS_SKIP_DESELECT_WARN_ERR:
        description: "Enter rocm_ut_failed/passed/skipped/deselected/warning/errors"
        required: true
        default: '358763/358763/358763/358763/358763/358763'
        type: string
      VERSION_DETAILS:
        description: "Enter Version Details key:value,key2:value2"
        required: true
        default: '{"mkl" : "2024.1", "python" : "3.8"}'
        type: string
      ROCM_SCORE_DETAILS:
        description: "Enter details of {rocm_score_details}"
        required: true
        default: '{"logurl" : "URL to test log", "artifacturl" : "Link to test artifactory", "comment" : "Additional details about ROCm score"}'
      CUDA_SCORE_DETAILS:
        description: "Enter the {cuda_score_details}"
        required: true
        default: '{"logurl" : "URL to test log", "artifacturl" : "Link to test artifactory", "comment" : "Additional details about ROCm score"}'
        type: string

# The jobs section defines jobs to run. Each job has completion status
jobs:
  # JSON Process job
  rocm-cuda-ut-score:
    # Specify the runner that the job will run on
    runs-on: ubuntu-latest

    # Define the set of steps or tasks executed by the job
    steps:
      - name: clean up repo if it exists
        run: |
          cd $GITHUB_WORKSPACE
          rm -rf raj-develop
      
      - name: checkout code
        uses: actions/checkout@v4
      
      #- name: generate unique branch
        #id: generate_branch
        #run: |
          #echo "BRANCH_NAME=auto-json-input-${{ github.run_id }}" >> $GITHUB_ENV
      
      #- name: Checkout Branch
        #run: |
          #git checkout -b auto-json-wf-input-patch1
      
      - name: Run Python script
        # storing user input into environment variables
        env:
          schema_version: "v4"
          submit_date_system_spec: ${{ github.event.inputs.SUBMIT_DATE_SYSTEM_SPEC }}
          component_version: ${{ github.event.inputs.COMPONENT_VERSION }}
          repo_commithash: ${{ github.event.inputs.REPO_COMMITHASH }}
          gfx_rocm: ${{ github.event.inputs.GFX_ROCM }}
          nvarch_cuda: ${{ github.event.inputs.NV_CUDA }}
          rocm_ut_fail_pass_skip_deselect_warn_err: ${{ github.event.inputs.ROCM_UT_FAIL_PASS_SKIP_DESELECT_WARN_ERR }}
          cuda_ut_fail_pass_skip_deselect_warn_err: ${{ github.event.inputs.CUDA_UT_FAIL_PASS_SKIP_DESELECT_WARN_ERR }}
          version_details: ${{ github.event.inputs.VERSION_DETAILS }}
          rocm_score_details: ${{ github.event.inputs.ROCM_SCORE_DETAILS }}
          cuda_score_details: ${{ github.event.inputs.CUDA_SCORE_DETAILS }}
        
        run: |
          echo "Run python script to generate json output"
          python3 $GITHUB_WORKSPACE/scripts/python/json-input-ut.py 
      
      - name: git config user github-actions bot
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: print branch
        run: |
           git branch
      
      # Run git status
      - name: git status to show new untracked archived files
        run: git status
      
      # Find untracked files
      - name: git ls-files --others
        run: git ls-files --others --exclude-standard --full-name
      - name: git add untracked files
        run: git add `git ls-files --others --exclude-standard --full-name`
      - name: git status
        run: git status
      - name: git commit
        run: git commit -am "create json file"
      #- name: git push branch
        #run: git push --set-upstream origin auto-json-wf-input-patch1
      - name: gh disable prompt
        run: |
          gh config set prompt disabled
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: use gh CLI to submit PR
        #run: |
          #gh pr create -B main -H auto-json-wf-input-patch1 --title 'github-action PR request for creating JSON file' --body 'github-action PR request for creating JSON file'
        #env:
          #GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Remove repo
      - name: clean up repo
        run: |
          cd $GITHUB_WORKSPACE
          rm -rf raj-develop
