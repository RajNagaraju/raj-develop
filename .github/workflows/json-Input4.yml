# this job is taking string inputs from user and printing
name: JSON INPUT 4 yaml

# This controls when the workflow is run. Set on to workflow
on:
  # This allows workflow to be run manually from Actions tab
  workflow_dispatch:
    # Retrieving inputs from the user
    inputs:
      SUBMIT_DATE:
        description: "Enter the submit date (YYYY-MM-DDTHH:MM:SS)"
        required: true
        default: '2024-08-16'
        type: string
      COMPONENT_VERSION:
        description: 'Enter the component/version'
        required: true
        default: 'pytorch/latest'
        type: string 
      REPO_COMMITHASH:
        description: 'Enter repo URL with commithash'
        required: true
        default: 'https://github.com/pytorch/pytorch/commit/4eee2e7a6dfbd9caab6a1e59088744ae91f2aa25'
        type: string
      AISW_TEST_TARGET_GOAL:
        description: "Enter the AISW test target goal"
        required: true
        default: '65785'
        type: string
      ROCM_DETAILS:
        description: "Enter details of rocm_cuda_score/gfxarch/rocm_version/rocm_actual_testcount/rocm_score"
        required: true
        default: '96.5/mi210/6.2/5545/98.6'
        type: string
      NV_DETAILS:
        description: "Enter details of nvarch/cuda_version/cuda_actual_testcount/cuda_score"
        required: true
        default: 'a100/12.1/5678/99.6'
      VERSION_DETAILS:
        description: "Enter Version Details key:value,key2:value2"
        required: true
        default: 'mkl:2024.1,python:3.8'
        type: string
      ROCM_CUDA_SCORE_DETAILS:
        description: "Enter the ROCm-CUDA score details comment:Additinal explanation: string"
        required: true
        default: 'comment:Additinal explanation: string'
        type: string
      ROCM_SCORE_DETAILS:
        description: "Enter the ROCm score details comment:Additional details about ROCm score: string"
        required: true
        default: 'comment:Additional details about ROCm score: string'
        type: string
      CUDA_SCORE_DETAILS:
        description: "Enter the CUDA score details comment:Additional details about CUDA score: string"
        required: true
        default: 'comment:Additional details about CUDA score: string'
        type: string

# The jobs section defines jobs to run. Each job has completion status
jobs:
  # JSON Process job
  process-json:
    # Specify the runner that the job will run on
    runs-on: ubuntu-latest

    # environment variable for jobs/steps
    env:
      SCHEMA_VERSION: "V4"

    # Define the set of steps or tasks executed by the job
    steps:
      - name: Split input string & Print the data
        run: |

          # Retrieve the input parameters
          schema_version="${{ env.SCHEMA_VERSION }}"
          submit_date="${{ github.event.inputs.SUBMIT_DATE }}"
          component_version="${{ github.event.inputs.COMPONENT_VERSION }}"
          repo_commithash="${{ github.event.inputs.REPO_COMMITHASH }}"
          aisw_test_target_goal="${{ github.event.inputs.AISW_TEST_TARGET_GOAL }}"
          rocm_details="${{ github.event.inputs.ROCM_DETAILS }}"
          nvidia_details="${{ github.event.inputs.NV_DETAILS }}"
          version_details="${{ github.event.inputs.VERSION_DETAILS }}"
          rocm_cuda_score_details='${{ github.event.inputs.ROCM_CUDA_SCORE_DETAILS }}'
          rocm_score_details='${{ github.event.inputs.ROCM_SCORE_DETAILS }}'
          cuda_score_details='${{ github.event.inputs.CUDA_SCORE_DETAILS }}'

          # Split component_version by "/ and :"
          # IFS used to split a string into variables based on a specified delimiter
          # read command reads a line from standard input and splits it into fields
          # The <<< operator redirects this string into the read command
          
          IFS='/' read -r component version <<< "$component_version"
          IFS='/' read -r rocm_cuda_score gfxarch rocm_version rocm_actual_testcount rocm_score <<< "$rocm_details"
          IFS='/' read -r nvarch cuda_version cuda_actual_testcount cuda_score <<< "$nvidia_details"
          IFS=':' read -r key value <<< "$rocm_cuda_score_details"
          IFS=':' read -r key value <<< "$rocm_score_details"
          IFS=':' read -r key value <<< "$cuda_score_details"

          #construct json string for rocm_cuda_score_details
          rocm_cuda_score_details="{\"$key\" : \"$value\"}"

          #construct json string for rocm_score_details
          rocm_score_detailss="{\"$key\" : \"$value\"}"

          #construct json string for cuda_score_details
          cuda_score_details="{\"$key\" : \"$value\"}"

          #Split repo_commithash by "/commit/ "
          repo=$(echo "$repo_commithash" | awk -F '/commit/' '{print $1}')
          commithash=$(echo "$repo_commithash" | awk -F '/commit/' '{print $2}')

          # Initialize the JSON string for version details
          version_details_string="{"

          # Split the input string by commas
          IFS=',' read -r -a pairs <<< "$version_details"

          # Loop through the key-value pairs
          for pair in "${pairs[@]}"; do
            # Split each pair by colon
            IFS=':' read -r key value <<< "$pair"

            # Append to the JSON string
            version_details_string+="\"$key\" : \"$value\", "
          done

          # Remove the trailing comma and space, and close the JSON string
          version_details_string=$(echo "$version_details_string" | sed 's/, $//')
          version_details_string+="}"
          
          #Printing the generated data
          echo
          '{
             \"schema_version\": \"$schema_version\",
             \"submit_date\": \"$submit_date\",
             \"component\": \"$component\",
             \"version\": \"$version\",
             \"repo\" : \"$repo\",
             \"commitHash\": \"$commithash\",
             \"aisw_test_target_goal\": \"$aisw_test_target_goal\",
             \"rocm_cuda_score\": \"$rocm_cuda_score\",
             \"gfxarch\": \"$gfxarch\",
             \"rocm_version\": \"$rocm_version\",
             \"rocm_actual_testcount\": \"$rocm_actual_testcount\",
             \"rocm_score\": \"$rocm_score\",
             \"nvarch\": \"$nvarch\",
             \"cuda_version\": \"$cuda_version\",
             \"cuda_actual_testcountt\": \"$cuda_actual_testcount\",
             \"cuda_score\": \"$cuda_score\",
             \"version_details\" : $version_details_string,
             \"rocm_cuda_score_details\": $rocm_cuda_score_details,
             \"rocm_score_details\": $rocm_score_details,
             \"cuda_score_details\": $cuda_score_details
            }'
