name: Convert String to JSON

on:
  workflow_dispatch:
    inputs:
      VERSION_DETAILS:
        description: 'Enter version details as key:value pairs separated by commas (e.g., "mkl:2024.1, python:3.8")'
        required: true
        default: 'mkl:2024.1,python:3.8'
        type: string

jobs:
  process-json:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
                
      # Remove repo
      - name: clean up repo if it exists
        run: |
          cd $GITHUB_WORKSPACE
          rm -rf raj-develop
          
      - name: Generate Unique Branch Name
        id: generate_branch
        run: echo "BRANCH_NAME=auto-json-input-${{ github.run_id }}" >> $GITHUB_ENV
        
      - name: Checkout Unique Branch
        run: |
          git checkout -b $BRANCH_NAME 
          
      - name: Convert String to JSON
        run: |
          # Retrieve the input parameter
          version_details="${{ github.event.inputs.VERSION_DETAILS }}"

          # Initialize the JSON string
          json_string="{"

          # Split the input string by commas
          IFS=',' read -r -a pairs <<< "$version_details"

          # Loop through the key-value pairs
          for pair in "${pairs[@]}"; do
            # Split each pair by colon
            IFS=':' read -r key value <<< "$pair"

            # Append to the JSON string
            json_string+="\"$key\": \"$value\", "
          done

          # Remove the trailing comma and space, and close the JSON string
          json_string=$(echo "$json_string" | sed 's/, $//')
          json_string+="}"

          # Print the constructed JSON string
          json_data=$(cat <<EOF
          {
                  "Constructed JSON": $json_string
          } 
          EOF
          )
          
          # printing output to file
          echo "$json_data" > docker/sample-${{ github.run_id }}.json
          echo "$json_data"
          
      - name: git config user github-actions bot
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
      - name: print branch
        run: git branch
      # Run git status
      - name: git status to show new untracked archived files
        run: git status
      - name: git add untracked files
        run: |
          git add docker/sample.json
      - name: git status
        run: git status
      - name: git commit
        run: git commit -m "update json file"
      - name: git push branch
        run: git push --set-upstream origin $BRANCH_NAME
      - name: gh disable prompt
        run: |
          gh config set prompt disabled
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: use gh CLI to submit PR
        run: |
          gh pr create -B main -H $BRANCH_NAME --title 'github-action PR request for updating JSON file' --body 'github-action PR request for update JSON file'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Remove repo
      - name: clean up repo
        run: |
          cd $GITHUB_WORKSPACE
          rm -rf raj-develop
